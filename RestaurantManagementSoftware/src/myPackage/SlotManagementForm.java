/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myPackage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abhinavdholi
 */
public class SlotManagementForm extends javax.swing.JFrame {

    /**
     * Creates new form SlotManagementForm
     */
    Connection con;
    ResultSet rs;
    Statement stmt;
    String conUsername;
    String conPass;
    String user;

    public SlotManagementForm(String username, String password, String userS) {
        initComponents();
//        btnDeleteSlot.setEnabled(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        try {
            this.conUsername = username;
            this.conPass = password;
            this.user = userS;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Hotel", conUsername, conPass);
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSlots = new javax.swing.JTable();
        btnShowSlots = new javax.swing.JButton();
        dteDate = new com.toedter.calendar.JDateChooser();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        spinTime = new javax.swing.JSpinner(sm);
        jLabel1 = new javax.swing.JLabel();
        btnAddSlot = new javax.swing.JButton();
        btnDeleteSlot = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblSlots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time"
            }
        ));
        jScrollPane1.setViewportView(tblSlots);

        btnShowSlots.setText("Show Slots");
        btnShowSlots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSlotsActionPerformed(evt);
            }
        });

        JSpinner.DateEditor de = new JSpinner.DateEditor(spinTime, "HH:mm:ss");
        spinTime.setEditor(de);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Add a New Slot");

        btnAddSlot.setText("Add Slot");
        btnAddSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSlotActionPerformed(evt);
            }
        });

        btnDeleteSlot.setText("Delete Slot");
        btnDeleteSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSlotActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Slot Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnShowSlots)
                            .addComponent(btnDeleteSlot)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dteDate, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(spinTime, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnAddSlot)
                                        .addGap(81, 81, 81))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(68, 68, 68))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDeleteSlot)
                        .addGap(43, 43, 43)
                        .addComponent(btnShowSlots)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dteDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSlot)
                        .addGap(9, 9, 9))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowSlotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSlotsActionPerformed
        try {

            String q = "call DisplaySlot()";

            rs = stmt.executeQuery(q);
            DefaultTableModel m = (DefaultTableModel) tblSlots.getModel();

            int rcount = tblSlots.getRowCount();

            for (int i = 0; i < rcount; i++) {
                m.removeRow(0);
            }
            String item_name, rate, cat;

            while (rs.next()) {
                cat = rs.getString("date");
                item_name = rs.getString("timeslot");

                m.addRow(new Object[]{cat, item_name});

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnShowSlotsActionPerformed

    private void btnAddSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSlotActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(dteDate.getDate());

        Object value = spinTime.getValue();

        Date date2 = (Date) value;
        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
        String time = format.format(date2);
        
        try 
        {
            String q = "call manageslots('"+date+"', '"+time+"', '"+this.user+"', 'add')";
            stmt.executeUpdate(q);
            JOptionPane.showMessageDialog(null, "The slot has been added!");
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        

    }//GEN-LAST:event_btnAddSlotActionPerformed

    private void btnDeleteSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSlotActionPerformed
        int row = tblSlots.getSelectedRow();
        String date = tblSlots.getModel().getValueAt(row, 0).toString();
        String time = tblSlots.getModel().getValueAt(row, 1).toString();
        
        
        try
        {
            int i = JOptionPane.showConfirmDialog(null, "Are you sure that you want to delete this slot?");
            
            if(i==0)
            {
                String q = "call manageslots('"+date+"', '"+time+"', '"+this.user+"', 'remove')";
                stmt.executeUpdate(q);
     
                JOptionPane.showMessageDialog(null, "Slot removed successfully!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Cancelled");
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnDeleteSlotActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSlot;
    private javax.swing.JButton btnDeleteSlot;
    private javax.swing.JButton btnShowSlots;
    private com.toedter.calendar.JDateChooser dteDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinTime;
    private javax.swing.JTable tblSlots;
    // End of variables declaration//GEN-END:variables
}
